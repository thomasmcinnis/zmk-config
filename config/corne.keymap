/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R     &kp T              &kp Y        &kp U     &kp I      &kp O    &kp P     &kp MINUS
&kp TAB    &kp A  &kp S  &kp D      &kp F     &kp G              &kp H        &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V     &kp B              &kp N        &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                         &kp LCTRL  &kp LGUI  &lt 1 BACKSPACE    &lt 2 SPACE  &kp LGUI  &kp LALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LC(GRAVE)  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp LC(LG(NUMBER_4))  &none                  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MULTIPLY  &kp KP_DIVIDE    &trans
&trans  &none          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(LEFT_ARROW)    &kp LC(RIGHT_ARROW)    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &kp KP_SUBTRACT  &trans
&trans  &kp LG(Z)      &kp LG(X)             &kp LG(C)             &kp LG(V)             &kp LG(B)              &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans           &kp KP_EQUAL     &trans
                                             &trans                &trans                &trans                 &kp SPACE        &kp KP_NUMBER_0  &kp KP_N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GRAVE      &kp LS(AMPS)   &kp LS(AT)    &kp LS(LPAR)  &kp LS(RPAR)    &none     &none     &none   &none      &none  &trans
&trans  &kp LS(STAR)   &kp LS(DLLR)   &kp LS(EXCL)  &kp LS(LBRC)  &kp LS(RBRC)    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &trans
&trans  &kp LS(POUND)  &kp LS(PRCNT)  &kp BSLH      &kp LBKT      &kp RBKT        &none     &none     &none   &none      &none  &trans
                                      &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };
    };
};
